/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GreeterV2, GreeterV2Interface } from "../GreeterV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
      {
        internalType: "address",
        name: "safeAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f61806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637ab4339d1161008c578063a457c2d711610066578063a457c2d71461025f578063a9059cbb1461028f578063cfae3217146102bf578063dd62ed3e146102dd576100ea565b80637ab4339d1461020957806395d89b4114610225578063a413686214610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030d565b6040516101049190611773565b60405180910390f35b610127600480360381019061012291906114c3565b61039f565b6040516101349190611758565b60405180910390f35b6101456103c2565b6040516101529190611958565b60405180910390f35b61017560048036038101906101709190611474565b6103cc565b6040516101829190611758565b60405180910390f35b6101936103fb565b6040516101a09190611973565b60405180910390f35b6101c360048036038101906101be91906114c3565b610404565b6040516101d09190611758565b60405180910390f35b6101f360048036038101906101ee919061140f565b6104ae565b6040516102009190611958565b60405180910390f35b610223600480360381019061021e9190611540565b6104f7565b005b61022d610697565b60405161023a9190611773565b60405180910390f35b61025d600480360381019061025891906114ff565b610729565b005b610279600480360381019061027491906114c3565b6107f0565b6040516102869190611758565b60405180910390f35b6102a960048036038101906102a491906114c3565b6108da565b6040516102b69190611758565b60405180910390f35b6102c76108fd565b6040516102d49190611773565b60405180910390f35b6102f760048036038101906102f29190611438565b61098f565b6040516103049190611958565b60405180910390f35b60606036805461031c90611aed565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611aed565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b6000806103aa610a16565b90506103b7818585610a1e565b600191505092915050565b6000603554905090565b6000806103d7610a16565b90506103e4858285610be9565b6103ef858585610c75565b60019150509392505050565b60006012905090565b60008061040f610a16565b90506104a3818585603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461049e9190611a00565b610a1e565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff1661051f5760008054906101000a900460ff1615610528565b610527610ef9565b5b610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e90611898565b60405180910390fd5b60008060019054906101000a900460ff1615905080156105b7576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6105d9604051806060016040528060228152602001611f0a6022913984610f0a565b82606590805190602001906105ef9291906112da565b506106646040518060400160405280600a81526020017f4772656574657244414f000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5345520000000000000000000000000000000000000000000000000000000000815250610fa6565b61067182620aa289611003565b80156106925760008060016101000a81548160ff0219169083151502179055505b505050565b6060603780546106a690611aed565b80601f01602080910402602001604051908101604052809291908181526020018280546106d290611aed565b801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b5050505050905090565b6107d6604051806060016040528060238152602001611ee7602391396065805461075290611aed565b80601f016020809104026020016040519081016040528092919081815260200182805461077e90611aed565b80156107cb5780601f106107a0576101008083540402835291602001916107cb565b820191906000526020600020905b8154815290600101906020018083116107ae57829003601f168201915b505050505083611164565b80606590805190602001906107ec9291906112da565b5050565b6000806107fb610a16565b90506000603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156108c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b890611918565b60405180910390fd5b6108ce8286868403610a1e565b60019250505092915050565b6000806108e5610a16565b90506108f2818585610c75565b600191505092915050565b60606065805461090c90611aed565b80601f016020809104026020016040519081016040528092919081815260200182805461093890611aed565b80156109855780601f1061095a57610100808354040283529160200191610985565b820191906000526020600020905b81548152906001019060200180831161096857829003601f168201915b5050505050905090565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a85906118d8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af590611838565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610bdc9190611958565b60405180910390a3505050565b6000610bf5848461098f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c6f5781811015610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611858565b60405180910390fd5b610c6e8484848403610a1e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ce5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdc906118b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c90611818565b60405180910390fd5b610d60838383611203565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dde90611878565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e7c9190611a00565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ee09190611958565b60405180910390a3610ef3848484611208565b50505050565b6000610f043061120d565b15905090565b610fa28282604051602401610f20929190611795565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611230565b5050565b600060019054906101000a900460ff16610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec906118f8565b60405180910390fd5b610fff8282611259565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a90611938565b60405180910390fd5b61107f60008383611203565b80603560008282546110919190611a00565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110e79190611a00565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161114c9190611958565b60405180910390a361116060008383611208565b5050565b6111fe83838360405160240161117c939291906117cc565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611230565b505050565b505050565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600060019054906101000a900460ff166112a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129f906118f8565b60405180910390fd5b81603690805190602001906112be9291906112da565b5080603790805190602001906112d59291906112da565b505050565b8280546112e690611aed565b90600052602060002090601f016020900481019282611308576000855561134f565b82601f1061132157805160ff191683800117855561134f565b8280016001018555821561134f579182015b8281111561134e578251825591602001919060010190611333565b5b50905061135c9190611360565b5090565b5b80821115611379576000816000905550600101611361565b5090565b600061139061138b846119b3565b61198e565b9050828152602081018484840111156113a857600080fd5b6113b3848285611aab565b509392505050565b6000813590506113ca81611eb8565b92915050565b600082601f8301126113e157600080fd5b81356113f184826020860161137d565b91505092915050565b60008135905061140981611ecf565b92915050565b60006020828403121561142157600080fd5b600061142f848285016113bb565b91505092915050565b6000806040838503121561144b57600080fd5b6000611459858286016113bb565b925050602061146a858286016113bb565b9150509250929050565b60008060006060848603121561148957600080fd5b6000611497868287016113bb565b93505060206114a8868287016113bb565b92505060406114b9868287016113fa565b9150509250925092565b600080604083850312156114d657600080fd5b60006114e4858286016113bb565b92505060206114f5858286016113fa565b9150509250929050565b60006020828403121561151157600080fd5b600082013567ffffffffffffffff81111561152b57600080fd5b611537848285016113d0565b91505092915050565b6000806040838503121561155357600080fd5b600083013567ffffffffffffffff81111561156d57600080fd5b611579858286016113d0565b925050602061158a858286016113bb565b9150509250929050565b61159d81611a68565b82525050565b60006115ae826119e4565b6115b881856119ef565b93506115c8818560208601611aba565b6115d181611bdd565b840191505092915050565b60006115e96023836119ef565b91506115f482611bee565b604082019050919050565b600061160c6022836119ef565b915061161782611c3d565b604082019050919050565b600061162f601d836119ef565b915061163a82611c8c565b602082019050919050565b60006116526026836119ef565b915061165d82611cb5565b604082019050919050565b6000611675602e836119ef565b915061168082611d04565b604082019050919050565b60006116986025836119ef565b91506116a382611d53565b604082019050919050565b60006116bb6024836119ef565b91506116c682611da2565b604082019050919050565b60006116de602b836119ef565b91506116e982611df1565b604082019050919050565b60006117016025836119ef565b915061170c82611e40565b604082019050919050565b6000611724601f836119ef565b915061172f82611e8f565b602082019050919050565b61174381611a94565b82525050565b61175281611a9e565b82525050565b600060208201905061176d6000830184611594565b92915050565b6000602082019050818103600083015261178d81846115a3565b905092915050565b600060408201905081810360008301526117af81856115a3565b905081810360208301526117c381846115a3565b90509392505050565b600060608201905081810360008301526117e681866115a3565b905081810360208301526117fa81856115a3565b9050818103604083015261180e81846115a3565b9050949350505050565b60006020820190508181036000830152611831816115dc565b9050919050565b60006020820190508181036000830152611851816115ff565b9050919050565b6000602082019050818103600083015261187181611622565b9050919050565b6000602082019050818103600083015261189181611645565b9050919050565b600060208201905081810360008301526118b181611668565b9050919050565b600060208201905081810360008301526118d18161168b565b9050919050565b600060208201905081810360008301526118f1816116ae565b9050919050565b60006020820190508181036000830152611911816116d1565b9050919050565b60006020820190508181036000830152611931816116f4565b9050919050565b6000602082019050818103600083015261195181611717565b9050919050565b600060208201905061196d600083018461173a565b92915050565b60006020820190506119886000830184611749565b92915050565b60006119986119a9565b90506119a48282611b1f565b919050565b6000604051905090565b600067ffffffffffffffff8211156119ce576119cd611bae565b5b6119d782611bdd565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611a0b82611a94565b9150611a1683611a94565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a4b57611a4a611b50565b5b828201905092915050565b6000611a6182611a74565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611ad8578082015181840152602081019050611abd565b83811115611ae7576000848401525b50505050565b60006002820490506001821680611b0557607f821691505b60208210811415611b1957611b18611b7f565b5b50919050565b611b2882611bdd565b810181811067ffffffffffffffff82111715611b4757611b46611bae565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611ec181611a56565b8114611ecc57600080fd5b50565b611ed881611a94565b8114611ee357600080fd5b5056fe4368616e67696e67206772656574696e672066726f6d202725732720746f20272573274465706c6f79696e67206120477265657465722077697468206772656574696e673aa2646970667358221220556b706b5d2bf13854ebf83cf6dd187f3545dbdd22b34d94fbb3dce7e2dcfbf964736f6c63430008040033";

type GreeterV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GreeterV2__factory extends ContractFactory {
  constructor(...args: GreeterV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GreeterV2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GreeterV2> {
    return super.deploy(overrides || {}) as Promise<GreeterV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GreeterV2 {
    return super.attach(address) as GreeterV2;
  }
  connect(signer: Signer): GreeterV2__factory {
    return super.connect(signer) as GreeterV2__factory;
  }
  static readonly contractName: "GreeterV2";
  public readonly contractName: "GreeterV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterV2Interface {
    return new utils.Interface(_abi) as GreeterV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GreeterV2 {
    return new Contract(address, _abi, signerOrProvider) as GreeterV2;
  }
}
