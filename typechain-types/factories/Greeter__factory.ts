/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
      {
        internalType: "address",
        name: "safeAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f66806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637ab4339d1161008c578063a457c2d711610066578063a457c2d71461025f578063a9059cbb1461028f578063cfae3217146102bf578063dd62ed3e146102dd576100ea565b80637ab4339d1461020957806395d89b4114610225578063a413686214610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030d565b6040516101049190611778565b60405180910390f35b610127600480360381019061012291906114c8565b61039f565b604051610134919061175d565b60405180910390f35b6101456103c2565b604051610152919061195d565b60405180910390f35b61017560048036038101906101709190611479565b6103cc565b604051610182919061175d565b60405180910390f35b6101936103fb565b6040516101a09190611978565b60405180910390f35b6101c360048036038101906101be91906114c8565b610404565b6040516101d0919061175d565b60405180910390f35b6101f360048036038101906101ee9190611414565b6104ae565b604051610200919061195d565b60405180910390f35b610223600480360381019061021e9190611545565b6104f7565b005b61022d61069c565b60405161023a9190611778565b60405180910390f35b61025d60048036038101906102589190611504565b61072e565b005b610279600480360381019061027491906114c8565b6107f5565b604051610286919061175d565b60405180910390f35b6102a960048036038101906102a491906114c8565b6108df565b6040516102b6919061175d565b60405180910390f35b6102c7610902565b6040516102d49190611778565b60405180910390f35b6102f760048036038101906102f2919061143d565b610994565b604051610304919061195d565b60405180910390f35b60606036805461031c90611af2565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611af2565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b6000806103aa610a1b565b90506103b7818585610a23565b600191505092915050565b6000603554905090565b6000806103d7610a1b565b90506103e4858285610bee565b6103ef858585610c7a565b60019150509392505050565b60006012905090565b60008061040f610a1b565b90506104a3818585603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461049e9190611a05565b610a23565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff1661051f5760008054906101000a900460ff1615610528565b610527610efe565b5b610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e9061189d565b60405180910390fd5b60008060019054906101000a900460ff1615905080156105b7576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6105d9604051806060016040528060228152602001611f0f6022913984610f0f565b82606590805190602001906105ef9291906112df565b506106646040518060400160405280600a81526020017f4772656574657244414f000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5345520000000000000000000000000000000000000000000000000000000000815250610fab565b610676826709ac223f271726c9611008565b80156106975760008060016101000a81548160ff0219169083151502179055505b505050565b6060603780546106ab90611af2565b80601f01602080910402602001604051908101604052809291908181526020018280546106d790611af2565b80156107245780601f106106f957610100808354040283529160200191610724565b820191906000526020600020905b81548152906001019060200180831161070757829003601f168201915b5050505050905090565b6107db604051806060016040528060238152602001611eec602391396065805461075790611af2565b80601f016020809104026020016040519081016040528092919081815260200182805461078390611af2565b80156107d05780601f106107a5576101008083540402835291602001916107d0565b820191906000526020600020905b8154815290600101906020018083116107b357829003601f168201915b505050505083611169565b80606590805190602001906107f19291906112df565b5050565b600080610800610a1b565b90506000603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156108c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bd9061191d565b60405180910390fd5b6108d38286868403610a23565b60019250505092915050565b6000806108ea610a1b565b90506108f7818585610c7a565b600191505092915050565b60606065805461091190611af2565b80601f016020809104026020016040519081016040528092919081815260200182805461093d90611af2565b801561098a5780601f1061095f5761010080835404028352916020019161098a565b820191906000526020600020905b81548152906001019060200180831161096d57829003601f168201915b5050505050905090565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8a906118dd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa9061183d565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610be1919061195d565b60405180910390a3505050565b6000610bfa8484610994565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c745781811015610c66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5d9061185d565b60405180910390fd5b610c738484848403610a23565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce1906118bd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d519061181d565b60405180910390fd5b610d65838383611208565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de39061187d565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e819190611a05565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ee5919061195d565b60405180910390a3610ef884848461120d565b50505050565b6000610f0930611212565b15905090565b610fa78282604051602401610f2592919061179a565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611235565b5050565b600060019054906101000a900460ff16610ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff1906118fd565b60405180910390fd5b611004828261125e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106f9061193d565b60405180910390fd5b61108460008383611208565b80603560008282546110969190611a05565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ec9190611a05565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611151919061195d565b60405180910390a36111656000838361120d565b5050565b611203838383604051602401611181939291906117d1565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611235565b505050565b505050565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600060019054906101000a900460ff166112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a4906118fd565b60405180910390fd5b81603690805190602001906112c39291906112df565b5080603790805190602001906112da9291906112df565b505050565b8280546112eb90611af2565b90600052602060002090601f01602090048101928261130d5760008555611354565b82601f1061132657805160ff1916838001178555611354565b82800160010185558215611354579182015b82811115611353578251825591602001919060010190611338565b5b5090506113619190611365565b5090565b5b8082111561137e576000816000905550600101611366565b5090565b6000611395611390846119b8565b611993565b9050828152602081018484840111156113ad57600080fd5b6113b8848285611ab0565b509392505050565b6000813590506113cf81611ebd565b92915050565b600082601f8301126113e657600080fd5b81356113f6848260208601611382565b91505092915050565b60008135905061140e81611ed4565b92915050565b60006020828403121561142657600080fd5b6000611434848285016113c0565b91505092915050565b6000806040838503121561145057600080fd5b600061145e858286016113c0565b925050602061146f858286016113c0565b9150509250929050565b60008060006060848603121561148e57600080fd5b600061149c868287016113c0565b93505060206114ad868287016113c0565b92505060406114be868287016113ff565b9150509250925092565b600080604083850312156114db57600080fd5b60006114e9858286016113c0565b92505060206114fa858286016113ff565b9150509250929050565b60006020828403121561151657600080fd5b600082013567ffffffffffffffff81111561153057600080fd5b61153c848285016113d5565b91505092915050565b6000806040838503121561155857600080fd5b600083013567ffffffffffffffff81111561157257600080fd5b61157e858286016113d5565b925050602061158f858286016113c0565b9150509250929050565b6115a281611a6d565b82525050565b60006115b3826119e9565b6115bd81856119f4565b93506115cd818560208601611abf565b6115d681611be2565b840191505092915050565b60006115ee6023836119f4565b91506115f982611bf3565b604082019050919050565b60006116116022836119f4565b915061161c82611c42565b604082019050919050565b6000611634601d836119f4565b915061163f82611c91565b602082019050919050565b60006116576026836119f4565b915061166282611cba565b604082019050919050565b600061167a602e836119f4565b915061168582611d09565b604082019050919050565b600061169d6025836119f4565b91506116a882611d58565b604082019050919050565b60006116c06024836119f4565b91506116cb82611da7565b604082019050919050565b60006116e3602b836119f4565b91506116ee82611df6565b604082019050919050565b60006117066025836119f4565b915061171182611e45565b604082019050919050565b6000611729601f836119f4565b915061173482611e94565b602082019050919050565b61174881611a99565b82525050565b61175781611aa3565b82525050565b60006020820190506117726000830184611599565b92915050565b6000602082019050818103600083015261179281846115a8565b905092915050565b600060408201905081810360008301526117b481856115a8565b905081810360208301526117c881846115a8565b90509392505050565b600060608201905081810360008301526117eb81866115a8565b905081810360208301526117ff81856115a8565b9050818103604083015261181381846115a8565b9050949350505050565b60006020820190508181036000830152611836816115e1565b9050919050565b6000602082019050818103600083015261185681611604565b9050919050565b6000602082019050818103600083015261187681611627565b9050919050565b600060208201905081810360008301526118968161164a565b9050919050565b600060208201905081810360008301526118b68161166d565b9050919050565b600060208201905081810360008301526118d681611690565b9050919050565b600060208201905081810360008301526118f6816116b3565b9050919050565b60006020820190508181036000830152611916816116d6565b9050919050565b60006020820190508181036000830152611936816116f9565b9050919050565b600060208201905081810360008301526119568161171c565b9050919050565b6000602082019050611972600083018461173f565b92915050565b600060208201905061198d600083018461174e565b92915050565b600061199d6119ae565b90506119a98282611b24565b919050565b6000604051905090565b600067ffffffffffffffff8211156119d3576119d2611bb3565b5b6119dc82611be2565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611a1082611a99565b9150611a1b83611a99565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a5057611a4f611b55565b5b828201905092915050565b6000611a6682611a79565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611add578082015181840152602081019050611ac2565b83811115611aec576000848401525b50505050565b60006002820490506001821680611b0a57607f821691505b60208210811415611b1e57611b1d611b84565b5b50919050565b611b2d82611be2565b810181811067ffffffffffffffff82111715611b4c57611b4b611bb3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611ec681611a5b565b8114611ed157600080fd5b50565b611edd81611a99565b8114611ee857600080fd5b5056fe4368616e67696e67206772656574696e672066726f6d202725732720746f20272573274465706c6f79696e67206120477265657465722077697468206772656574696e673aa2646970667358221220f87674065e3e76b2e6896927dc659df859dad597a26b4a000bb3c128da54e61364736f6c63430008040033";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Greeter";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly contractName: "Greeter";
  public readonly contractName: "Greeter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
